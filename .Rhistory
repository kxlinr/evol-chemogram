subtype_n$subtype[i] = subtypes[i]
}
subtypes[i]
subtype_n = data.frame(matrix(ncol=2, nrow=length(subtypes)))
colnames(subtype_n) = c("subtype", "n")
for(i in 1:length(subtypes)){
subtype_n$n[i] = length((unique(data %>% filter(subtype==subtypes[i]))$cell_line))
subtype_n$subtype[i] = as.character(subtypes[i])
}
View(data)
data = merge(data, subtype_n, by="subtype")
count_n = function(data){
subtypes = (unique(data$subtype))
subtype_n = data.frame(matrix(ncol=2, nrow=length(subtypes)))
colnames(subtype_n) = c("subtype", "n")
for(i in 1:length(subtypes)){
subtype_n$n[i] = length((unique(data %>% filter(subtype==subtypes[i]))$cell_line))
subtype_n$subtype[i] = as.character(subtypes[i])
}
data = merge(data, subtype_n, by="subtype")
return(data)
}
rm(data, subtypes, subtype_n)
ggplot(count_n(scored_ranks_full), aes(x = subtype, y=accuracy)) + #select data to plot
geom_boxplot(width=0.4, fill="#9b2226", alpha = 0.6, fatten = NULL) + #boxplot, fatten=null is getting rid of the median line
ggbeeswarm::geom_quasirandom(method="smiley", width=0.2, alpha=0.4, size = 3, color="#6a040f") + #beeswarm
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), #add in a line to indicate the mean
width = 0.4, size = 2, linetype = "solid") +
geom_label(data=subtype_scores, aes(x = subtype, y = 0, label = n), #add n
label.padding = unit(0.15, "lines"), label.size = 0.4, size = 8) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1)) +
labs(title=paste0("Predictive Accuracy of ", length(sigs), "-sig Chemogram"),
subtitle = paste0(nrow(scored_ranks_full)," Cell Lines"),
y = "Predictive Accuracy", x = "Disease Site") +
theme_bw(base_size = 15) + #theme and sizing
theme(axis.text.y = element_text(size = 20),
axis.text.x = element_text(angle=30, size = 20, hjust=.9),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.text = element_text(size = 10))
ggsave(plot=p1,
filename=here("Plots",
paste0(length(sigs), "sig_accuracy_boxplots.png")),
width = 15, height = 9) #save plot
# beeswarm boxplot
p1 = ggplot(count_n(scored_ranks_full), aes(x = subtype, y=accuracy)) + #select data to plot
geom_boxplot(width=0.4, fill="#9b2226", alpha = 0.6, fatten = NULL) + #boxplot, fatten=null is getting rid of the median line
ggbeeswarm::geom_quasirandom(method="smiley", width=0.2, alpha=0.4, size = 3, color="#6a040f") + #beeswarm
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), #add in a line to indicate the mean
width = 0.4, size = 2, linetype = "solid") +
geom_label(data=subtype_scores, aes(x = subtype, y = 0, label = n), #add n
label.padding = unit(0.15, "lines"), label.size = 0.4, size = 8) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1)) +
labs(title=paste0("Predictive Accuracy of ", length(sigs), "-sig Chemogram"),
subtitle = paste0(nrow(scored_ranks_full)," Cell Lines"),
y = "Predictive Accuracy", x = "Disease Site") +
theme_bw(base_size = 15) + #theme and sizing
theme(axis.text.y = element_text(size = 20),
axis.text.x = element_text(angle=30, size = 20, hjust=.9),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.text = element_text(size = 10))
p1
p1
ggsave(plot=p1,
filename=here("Plots",
paste0(length(sigs), "sig_accuracy_boxplots.png")),
width = 15, height = 9) #save plot
epi = c("HNSC", "ESCA", "BRCA",
"COREAD", "LIHC", #"ACC", #leave this out bc it only has one cell line
"STAD", "KIRC", "LUAD",
"LUSC","MESO",
"PAAD", "THCA", "BLCA",
"CESC", "UCEC", "OV", "PRAD")
scored_ranks_epi = scored_ranks_full %>%
filter(subtype %in% epi)
p2 = ggplot(count_n(scored_ranks_epi), aes(x = subtype, y=accuracy)) + #select data to plot
geom_boxplot(width=0.4, fill="#9b2226", alpha = 0.6, fatten = NULL) + #boxplot, fatten=null is getting rid of the median line
ggbeeswarm::geom_quasirandom(method="smiley", width=0.2, alpha=0.4, size = 3, color="#6a040f") + #beeswarm
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), #add in a line to indicate the mean
width = 0.4, size = 2, linetype = "solid") +
# geom_label(data=subtype_scores, aes(x = subtype, y = 0, label = n), size=7) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1)) +
labs(title=paste0("Predictive Accuracy of ", length(sigs), "-sig Chemogram"),
subtitle = paste0(nrow(scored_ranks_epi)," Cell Lines"),
y = "Predictive Accuracy", x = "Disease Site") +
theme_bw(base_size = 15) + #theme and sizing
theme(axis.text.y = element_text(size = 20),
axis.text.x = element_text(angle=30, size = 20, hjust=.9),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.text = element_text(size = 10))
p2
p2 = ggplot(count_n(scored_ranks_epi), aes(x = subtype, y=accuracy)) + #select data to plot
geom_boxplot(width=0.4, fill="#9b2226", alpha = 0.6, fatten = NULL) + #boxplot, fatten=null is getting rid of the median line
ggbeeswarm::geom_quasirandom(method="smiley", width=0.2, alpha=0.4, size = 3, color="#6a040f") + #beeswarm
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), #add in a line to indicate the mean
width = 0.4, size = 2, linetype = "solid") +
geom_label(data=subtype_scores, aes(x = subtype, y = 0, label = n), size=7) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1)) +
labs(title=paste0("Predictive Accuracy of ", length(sigs), "-sig Chemogram"),
subtitle = paste0(nrow(scored_ranks_epi)," Cell Lines"),
y = "Predictive Accuracy", x = "Disease Site") +
theme_bw(base_size = 15) + #theme and sizing
theme(axis.text.y = element_text(size = 20),
axis.text.x = element_text(angle=30, size = 20, hjust=.9),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.text = element_text(size = 10))
p2
p2 = ggplot(count_n(scored_ranks_epi), aes(x = subtype, y=accuracy)) + #select data to plot
geom_boxplot(width=0.4, fill="#9b2226", alpha = 0.6, fatten = NULL) + #boxplot, fatten=null is getting rid of the median line
ggbeeswarm::geom_quasirandom(method="smiley", width=0.2, alpha=0.4, size = 3, color="#6a040f") + #beeswarm
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), #add in a line to indicate the mean
width = 0.4, size = 2, linetype = "solid") +
geom_label(data=subtype_scores, aes(x = subtype, y = 0, label = n), #add n
label.padding = unit(0.15, "lines"), label.size = 0.4, size = 8) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1)) +
labs(title=paste0("Predictive Accuracy of ", length(sigs), "-sig Chemogram"),
subtitle = paste0(nrow(scored_ranks_epi)," Cell Lines"),
y = "Predictive Accuracy", x = "Disease Site") +
theme_bw(base_size = 15) + #theme and sizing
theme(axis.text.y = element_text(size = 20),
axis.text.x = element_text(angle=30, size = 20, hjust=.9),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.text = element_text(size = 10))
p2
ggsave(plot=p2,
filename=here("Plots", "Epithelial Cancers",
paste0(length(sigs), "sig_accuracy_boxplots_epi.png")),
width = 15, height = 9) #save plot
p2
test=count_n(scored_ranks_epi)
View(test)
ggplot(count_n(scored_ranks_epi), aes(x = subtype, y=accuracy)) + #select data to plot
geom_boxplot(width=0.4, fill="#9b2226", alpha = 0.6, fatten = NULL) + #boxplot, fatten=null is getting rid of the median line
ggbeeswarm::geom_quasirandom(method="smiley", width=0.2, alpha=0.4, size = 3, color="#6a040f") + #beeswarm
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), #add in a line to indicate the mean
width = 0.4, size = 2, linetype = "solid") +
geom_label(data=subtype_scores, aes(x = subtype, y = 0, label = n), #add n
label.padding = unit(0.15, "lines"), label.size = 0.4, size = 8) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1)) +
labs(title=paste0("Predictive Accuracy of ", length(sigs), "-sig Chemogram"),
subtitle = paste0(nrow(scored_ranks_epi)," Cell Lines"),
y = "Predictive Accuracy", x = "Disease Site") +
theme_bw(base_size = 15) + #theme and sizing
theme(axis.text.y = element_text(size = 20),
axis.text.x = element_text(angle=30, size = 20, hjust=.9),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.text = element_text(size = 10))
ggplot(count_n(scored_ranks_epi), aes(x = subtype, y=accuracy)) + #select data to plot
geom_boxplot(width=0.4, fill="#9b2226", alpha = 0.6, fatten = NULL) + #boxplot, fatten=null is getting rid of the median line
ggbeeswarm::geom_quasirandom(method="smiley", width=0.2, alpha=0.4, size = 3, color="#6a040f") + #beeswarm
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), #add in a line to indicate the mean
width = 0.4, size = 2, linetype = "solid") +
geom_label(data=subtype_scores, aes(x = subtype, y = 0, label = n), size=7) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1)) +
labs(title=paste0("Predictive Accuracy of ", length(sigs), "-sig Chemogram"),
subtitle = paste0(nrow(scored_ranks_epi)," Cell Lines"),
y = "Predictive Accuracy", x = "Disease Site") +
theme_bw(base_size = 15) + #theme and sizing
theme(axis.text.y = element_text(size = 20),
axis.text.x = element_text(angle=30, size = 20, hjust=.9),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.text = element_text(size = 10))
ggplot(count_n(scored_ranks_epi), aes(x = subtype, y=accuracy)) + #select data to plot
geom_boxplot(width=0.4, fill="#9b2226", alpha = 0.6, fatten = NULL) + #boxplot, fatten=null is getting rid of the median line
ggbeeswarm::geom_quasirandom(method="smiley", width=0.2, alpha=0.4, size = 3, color="#6a040f") + #beeswarm
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), #add in a line to indicate the mean
width = 0.4, size = 2, linetype = "solid") +
# geom_label(data=subtype_scores, aes(x = subtype, y = 0, label = n), size=7) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1)) +
labs(title=paste0("Predictive Accuracy of ", length(sigs), "-sig Chemogram"),
subtitle = paste0(nrow(scored_ranks_epi)," Cell Lines"),
y = "Predictive Accuracy", x = "Disease Site") +
theme_bw(base_size = 15) + #theme and sizing
theme(axis.text.y = element_text(size = 20),
axis.text.x = element_text(angle=30, size = 20, hjust=.9),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.text = element_text(size = 10))
View(subtype_scores)
subtype_scores_epi = subtype_scores %>%
filter(subtype %in% epi)
View(subtype_scores_epi)
ggplot((scored_ranks_full), aes(x = subtype, y=accuracy)) + #select data to plot
geom_boxplot(width=0.4, fill="#9b2226", alpha = 0.6, fatten = NULL) + #boxplot, fatten=null is getting rid of the median line
ggbeeswarm::geom_quasirandom(method="smiley", width=0.2, alpha=0.4, size = 3, color="#6a040f") + #beeswarm
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), #add in a line to indicate the mean
width = 0.4, size = 2, linetype = "solid") +
geom_label(data=subtype_scores, aes(x = subtype, y = 0, label = n), #add n
label.padding = unit(0.15, "lines"), label.size = 0.4, size = 8) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1)) +
labs(title=paste0("Predictive Accuracy of ", length(sigs), "-sig Chemogram"),
subtitle = paste0(nrow(scored_ranks_full)," Cell Lines"),
y = "Predictive Accuracy", x = "Disease Site") +
theme_bw(base_size = 15) + #theme and sizing
theme(axis.text.y = element_text(size = 20),
axis.text.x = element_text(angle=30, size = 20, hjust=.9),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.text = element_text(size = 10))
# beeswarm boxplot
p1 = ggplot(scored_ranks_full, aes(x = subtype, y=accuracy)) + #select data to plot
geom_boxplot(width=0.4, fill="#9b2226", alpha = 0.6, fatten = NULL) + #boxplot, fatten=null is getting rid of the median line
ggbeeswarm::geom_quasirandom(method="smiley", width=0.2, alpha=0.4, size = 3, color="#6a040f") + #beeswarm
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), #add in a line to indicate the mean
width = 0.4, size = 2, linetype = "solid") +
geom_label(data=subtype_scores, aes(x = subtype, y = 0, label = n), #add n
label.padding = unit(0.15, "lines"), label.size = 0.4, size = 8) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1)) +
labs(title=paste0("Predictive Accuracy of ", length(sigs), "-sig Chemogram"),
subtitle = paste0(nrow(scored_ranks_full)," Cell Lines"),
y = "Predictive Accuracy", x = "Disease Site") +
theme_bw(base_size = 15) + #theme and sizing
theme(axis.text.y = element_text(size = 20),
axis.text.x = element_text(angle=30, size = 20, hjust=.9),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.text = element_text(size = 10))
p1
ggplot(scored_ranks_full, aes(x = subtype, y=accuracy)) + #select data to plot
geom_boxplot(width=0.4, fill="#9b2226", alpha = 0.6, fatten = NULL) + #boxplot, fatten=null is getting rid of the median line
ggbeeswarm::geom_quasirandom(method="smiley", width=0.2, alpha=0.4, size = 3, color="#6a040f") + #beeswarm
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), #add in a line to indicate the mean
width = 0.4, size = 2, linetype = "solid") +
geom_label(data=subtype_scores, aes(x = subtype, y = 0, label = n), #add n
label.padding = unit(0.15, "lines"), label.size = 0.4, size = 8) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1)) +
labs(title=paste0("Predictive Accuracy of ", length(sigs), "-sig Chemogram"),
subtitle = paste0(nrow(scored_ranks_full)," Cell Lines"),
y = "Predictive Accuracy", x = "Disease Site") +
theme_bw(base_size = 15) + #theme and sizing
theme(axis.text.y = element_text(size = 20),
axis.text.x = element_text(angle=30, size = 20, hjust=.9),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.text = element_text(size = 10))
ggplot(scored_ranks_full, aes(x = subtype, y=accuracy)) + #select data to plot
geom_boxplot(width=0.4, fill="#9b2226", alpha = 0.6, fatten = NULL) + #boxplot, fatten=null is getting rid of the median line
ggbeeswarm::geom_quasirandom(method="smiley", width=0.2, alpha=0.4, size = 3, color="#6a040f") + #beeswarm
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), #add in a line to indicate the mean
width = 0.4, size = 2, linetype = "solid") +
# geom_label(data=subtype_scores, aes(x = subtype, y = 0, label = n), #add n
#            label.padding = unit(0.15, "lines"), label.size = 0.4, size = 8) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1)) +
labs(title=paste0("Predictive Accuracy of ", length(sigs), "-sig Chemogram"),
subtitle = paste0(nrow(scored_ranks_full)," Cell Lines"),
y = "Predictive Accuracy", x = "Disease Site") +
theme_bw(base_size = 15) + #theme and sizing
theme(axis.text.y = element_text(size = 20),
axis.text.x = element_text(angle=30, size = 20, hjust=.9),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.text = element_text(size = 10))
ggplot(count_n(scored_ranks_epi), aes(x = subtype, y=accuracy)) + #select data to plot
geom_boxplot(width=0.4, fill="#9b2226", alpha = 0.6, fatten = NULL) + #boxplot, fatten=null is getting rid of the median line
ggbeeswarm::geom_quasirandom(method="smiley", width=0.2, alpha=0.4, size = 3, color="#6a040f") + #beeswarm
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), #add in a line to indicate the mean
width = 0.4, size = 2, linetype = "solid") +
geom_label(data=subtype_scores_epi, aes(x = subtype, y = 0, label = n), #add n
label.padding = unit(0.15, "lines"), label.size = 0.4, size = 8) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1)) +
labs(title=paste0("Predictive Accuracy of ", length(sigs), "-sig Chemogram"),
subtitle = paste0(nrow(scored_ranks_epi)," Cell Lines"),
y = "Predictive Accuracy", x = "Disease Site") +
theme_bw(base_size = 15) + #theme and sizing
theme(axis.text.y = element_text(size = 20),
axis.text.x = element_text(angle=30, size = 20, hjust=.9),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.text = element_text(size = 10))
ggplot(scored_ranks_epi, aes(x = subtype, y=accuracy)) + #select data to plot
geom_boxplot(width=0.4, fill="#9b2226", alpha = 0.6, fatten = NULL) + #boxplot, fatten=null is getting rid of the median line
ggbeeswarm::geom_quasirandom(method="smiley", width=0.2, alpha=0.4, size = 3, color="#6a040f") + #beeswarm
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), #add in a line to indicate the mean
width = 0.4, size = 2, linetype = "solid") +
geom_label(data=subtype_scores_epi, aes(x = subtype, y = 0, label = n), #add n
label.padding = unit(0.15, "lines"), label.size = 0.4, size = 8) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1)) +
labs(title=paste0("Predictive Accuracy of ", length(sigs), "-sig Chemogram"),
subtitle = paste0(nrow(scored_ranks_epi)," Cell Lines"),
y = "Predictive Accuracy", x = "Disease Site") +
theme_bw(base_size = 15) + #theme and sizing
theme(axis.text.y = element_text(size = 20),
axis.text.x = element_text(angle=30, size = 20, hjust=.9),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.text = element_text(size = 10))
p2 = ggplot(scored_ranks_epi, aes(x = subtype, y=accuracy)) + #select data to plot
geom_boxplot(width=0.4, fill="#9b2226", alpha = 0.6, fatten = NULL) + #boxplot, fatten=null is getting rid of the median line
ggbeeswarm::geom_quasirandom(method="smiley", width=0.2, alpha=0.4, size = 3, color="#6a040f") + #beeswarm
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), #add in a line to indicate the mean
width = 0.4, size = 2, linetype = "solid") +
geom_label(data=subtype_scores_epi, aes(x = subtype, y = 0, label = n), #add n
label.padding = unit(0.15, "lines"), label.size = 0.4, size = 8) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1)) +
labs(title=paste0("Predictive Accuracy of ", length(sigs), "-sig Chemogram"),
subtitle = paste0(nrow(scored_ranks_epi)," Cell Lines"),
y = "Predictive Accuracy", x = "Disease Site") +
theme_bw(base_size = 15) + #theme and sizing
theme(axis.text.y = element_text(size = 20),
axis.text.x = element_text(angle=30, size = 20, hjust=.9),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.text = element_text(size = 10))
p2
ggsave(plot=p2,
filename=here("Plots", "Epithelial Cancers",
paste0(length(sigs), "sig_accuracy_boxplots_epi.png")),
width = 15, height = 9) #save plot
#remove unclassified from subtype score averages
subtype_scores$subtype <- factor(subtype_scores$subtype,
ordered = TRUE,
levels = c(cancer_order))
subtype_scores = subtype_scores[order(subtype_scores$subtype),]
ggplot(scored_ranks_full, aes(x = subtype, y=accuracy)) + #select data to plot
geom_boxplot(width=0.4, fill="#9b2226", alpha = 0.6, fatten = NULL) + #boxplot, fatten=null is getting rid of the median line
ggbeeswarm::geom_quasirandom(method="smiley", width=0.2, alpha=0.4, size = 3, color="#6a040f") + #beeswarm
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), #add in a line to indicate the mean
width = 0.4, size = 2, linetype = "solid") +
geom_label(data=subtype_scores, aes(x = subtype, y = 0, label = n), #add n
label.padding = unit(0.15, "lines"), label.size = 0.4, size = 8) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1)) +
labs(title=paste0("Predictive Accuracy of ", length(sigs), "-sig Chemogram"),
subtitle = paste0(nrow(scored_ranks_full)," Cell Lines"),
y = "Predictive Accuracy", x = "Disease Site") +
theme_bw(base_size = 15) + #theme and sizing
theme(axis.text.y = element_text(size = 20),
axis.text.x = element_text(angle=30, size = 20, hjust=.9),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.text = element_text(size = 10))
cell_lines = readRDS(here("Data", "cleaned_cell_line_meta.rds"))
subtype_key = readRDS(here("Data", "subtype_key.rds"))
drug_id_key = readRDS(here("Data", "drug_id_key.rds"))
sig_files = list.files(here("Data", "Signatures"))
sigs = lapply(sig_files, function(x) readRDS(here("Data", "Signatures", x)))
names(sigs) = gsub("\\_.*", "", sig_files) #cut off everything after the first underscore
## we also need the full drug names to match with the correct drug response data. those need to be manually entered in the *same order* as the list shows
#make sure theyre spelled right! can check the `drug_id_key` table for spelling
names(sigs) #print this to make sure the order is correct
sig_drugs = c("Cisplatin", "Cytarabine", "5-Fluorouracil", "Gemcitabine", "Irinotecan",
"Luminespib", "Paclitaxel", "Topotecan", "Vinblastine", "Vorinostat")
rm(sig_files)
cl_order = subtype_key[order(subtype_key$subtype), "cell_line"] #order both heatmaps by alph. subtype
fit_results = readRDS(here("Results",
paste0(length(sigs), "sig_nlme_fitted_data.rds")))
scores=readRDS(here("Results",
paste0(length(sigs), "sig_scores.rds")))
scores = na.omit(scores)
scores_long = pivot_longer(scores,
cols = c(names(sigs)),
names_to = "drug_abbrev",
values_to = "score")
n = length(sigs)
scored_ranks = readRDS(here("Results", paste0(length(sigs),"sig_accuracy_scores.rds")))
#all the values with NA had missing drug response data and should be excluded
nrow(scored_ranks)
scored_ranks_full = na.omit(scored_ranks) #986 to 759 for 3 sigs, 616 after rm unclassified cell lines
#968 to 670 for 10sig, 539 after rm unclass.
nrow(scored_ranks_full)
#create a new df with one row per subtype, and columns = subtype, proportion_correct
subtype = unique(scored_ranks_full$subtype)
subtype_scores = data.frame(subtype=subtype, accuracy=0, n = 0)
for (i in 1:length(subtype)){
#Subset data per subtype
subset = scored_ranks_full[which(scored_ranks_full$subtype == subtype[i]),]
#Store subtype name
subtype_scores$subtype[i] = subtype[i]
#calc and store % of cell line survivals correctly predicted
subtype_scores$accuracy[i] = round((sum(subset$accuracy)/nrow(subset)), digits=3)
#Indicate number of cell lines in subtype (n)
subtype_scores$n[i] = nrow(subset)
}
#order the rows by highest to lowest correct
subtype_scores = subtype_scores[order(subtype_scores$accuracy),]
#To maintain this order when we plot later, factorize the column
subtype_scores$subtype <- factor(subtype_scores$subtype,
ordered = TRUE,
levels = subtype_scores$subtype)
#remove unclassified cell lines
scored_ranks_full = scored_ranks_full %>% filter(subtype != "UNCLASSIFIED")
#Set order to = subtype_scores
cancer_order = (as.character(subtype_scores$subtype))[-c(which(as.character(subtype_scores$subtype)=="UNCLASSIFIED"))]
scored_ranks_full$subtype <- factor(scored_ranks_full$subtype,
ordered = TRUE,
levels = c(cancer_order))
scored_ranks_full = scored_ranks_full[order(scored_ranks_full$subtype),]
#remove unclassified from subtype score averages
subtype_scores$subtype <- factor(subtype_scores$subtype,
ordered = TRUE,
levels = c(cancer_order))
subtype_scores = subtype_scores[order(subtype_scores$subtype),]
#save
# saveRDS(scored_ranks_full, here("Results", paste0(length(sigs),"sig_accuracy_scores_cleaned.rds")))
ggplot(scored_ranks_full, aes(x = subtype, y=accuracy)) + #select data to plot
geom_boxplot(width=0.4, fill="#9b2226", alpha = 0.6, fatten = NULL) + #boxplot, fatten=null is getting rid of the median line
ggbeeswarm::geom_quasirandom(method="smiley", width=0.2, alpha=0.4, size = 3, color="#6a040f") + #beeswarm
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), #add in a line to indicate the mean
width = 0.4, size = 2, linetype = "solid") +
geom_label(data=subtype_scores, aes(x = subtype, y = 0, label = n), #add n
label.padding = unit(0.15, "lines"), label.size = 0.4, size = 8) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1)) +
labs(title=paste0("Predictive Accuracy of ", length(sigs), "-sig Chemogram"),
subtitle = paste0(nrow(scored_ranks_full)," Cell Lines"),
y = "Predictive Accuracy", x = "Disease Site") +
theme_bw(base_size = 15) + #theme and sizing
theme(axis.text.y = element_text(size = 20),
axis.text.x = element_text(angle=30, size = 20, hjust=.9),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.text = element_text(size = 10))
subtype_scores$subtype
scored_ranks_full$subtype
levels(scored_ranks_full$subtype)
levels(subtype_scores$subtype)
class(scored_ranks_full$subtype)
class(subtype_scores$subtype)
epi = c("HNSC", "ESCA", "BRCA",
"COREAD", "LIHC", #"ACC", #leave this out bc it only has one cell line
"STAD", "KIRC", "LUAD",
"LUSC","MESO",
"PAAD", "THCA", "BLCA",
"CESC", "UCEC", "OV", "PRAD")
scored_ranks_epi = scored_ranks_full %>%
filter(subtype %in% epi)
subtype_scores_epi = subtype_scores %>%
filter(subtype %in% epi)
ggplot(scored_ranks_epi, aes(x = subtype, y=accuracy)) + #select data to plot
geom_boxplot(width=0.4, fill="#9b2226", alpha = 0.6, fatten = NULL) + #boxplot, fatten=null is getting rid of the median line
ggbeeswarm::geom_quasirandom(method="smiley", width=0.2, alpha=0.4, size = 3, color="#6a040f") + #beeswarm
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), #add in a line to indicate the mean
width = 0.4, size = 2, linetype = "solid") +
geom_label(data=subtype_scores_epi, aes(x = subtype, y = 0, label = n), #add n
label.padding = unit(0.15, "lines"), label.size = 0.4, size = 8) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1)) +
labs(title=paste0("Predictive Accuracy of ", length(sigs), "-sig Chemogram"),
subtitle = paste0(nrow(scored_ranks_epi)," Cell Lines"),
y = "Predictive Accuracy", x = "Disease Site") +
theme_bw(base_size = 15) + #theme and sizing
theme(axis.text.y = element_text(size = 20),
axis.text.x = element_text(angle=30, size = 20, hjust=.9),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.text = element_text(size = 10))
# beeswarm boxplot
p1 = ggplot(scored_ranks_full, aes(x = subtype, y=accuracy)) + #select data to plot
geom_boxplot(width=0.4, fill="#9b2226", alpha = 0.6, fatten = NULL) + #boxplot, fatten=null is getting rid of the median line
ggbeeswarm::geom_quasirandom(method="smiley", width=0.2, alpha=0.4, size = 3, color="#6a040f") + #beeswarm
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), #add in a line to indicate the mean
width = 0.4, size = 2, linetype = "solid") +
geom_label(data=subtype_scores, aes(x = subtype, y = 0, label = n), #add n
label.padding = unit(0.15, "lines"), label.size = 0.4, size = 8) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1)) +
labs(title=paste0("Predictive Accuracy of ", length(sigs), "-sig Chemogram"),
subtitle = paste0(nrow(scored_ranks_full)," Cell Lines"),
y = "Predictive Accuracy", x = "Disease Site") +
theme_bw(base_size = 15) + #theme and sizing
theme(axis.text.y = element_text(size = 20),
axis.text.x = element_text(angle=30, size = 20, hjust=.9),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.text = element_text(size = 10))
p1
contains("KIRC", levels(subtype_scores$subtype))
# beeswarm boxplot
p1 = ggplot(scored_ranks_full, aes(x = subtype, y=accuracy)) + #select data to plot
geom_boxplot(width=0.4, fill="#9b2226", alpha = 0.6, fatten = NULL) + #boxplot, fatten=null is getting rid of the median line
ggbeeswarm::geom_quasirandom(method="smiley", width=0.2, alpha=0.4, size = 3, color="#6a040f") + #beeswarm
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), #add in a line to indicate the mean
width = 0.4, size = 2, linetype = "solid") +
geom_label(data=na.omit(subtype_scores), aes(x = subtype, y = 0, label = n), #add n
label.padding = unit(0.15, "lines"), label.size = 0.4, size = 8) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1)) +
labs(title=paste0("Predictive Accuracy of ", length(sigs), "-sig Chemogram"),
subtitle = paste0(nrow(scored_ranks_full)," Cell Lines"),
y = "Predictive Accuracy", x = "Disease Site") +
theme_bw(base_size = 15) + #theme and sizing
theme(axis.text.y = element_text(size = 20),
axis.text.x = element_text(angle=30, size = 20, hjust=.9),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.text = element_text(size = 10))
p1
ggsave(plot=p1,
filename=here("Plots",
paste0(length(sigs), "sig_accuracy_boxplots.png")),
width = 15, height = 9) #save plot
