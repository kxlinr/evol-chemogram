label.padding = unit(0.15, "lines"), label.size = 0.4, size = 4) +
geom_vline(xintercept = 0.05, color="black") +
geom_point(alpha=0.8, size=3) +
scale_color_manual(values=c("#9b2226", "#e85d04", "#faa307", "#fcca46",
"#4f772d", "#0a9396", "#023e8a",
"#5a189a", "#f26a8d",
"black")) +
scale_x_continuous(trans="log10") +
labs(title = "FDR-Adjusted P-values",
subtitle = "with alpha = 0.05",
x="log10(Adjusted p-value)", y="Disease Site",
col="Comparison")+
theme(axis.text=element_text(size=14),
axis.text.x = element_text(angle=30, hjust=1, vjust=1)))
ggsave(here("Plots", "Method Comparison", "wilcoxon_p.png"),
width=9, height=6)
(ggplot(method_p, aes(x=p, y=subtype, col=comparison)) +
geom_text(aes(x=bonf.alpha, y=subtype), label="|", color="black",
inherit.aes=F, alpha=0.5) +
geom_label(data=method_p, aes(y = subtype, x = 0.00000008, #add n
label = n_cell_line), inherit.aes=F,
label.padding = unit(0.15, "lines"), label.size = 0.4, size = 4) +
geom_point(alpha=0.7, size=3) +
scale_color_manual(values=c("#9b2226", "#e85d04", "#faa307", "#fcca46",
"#4f772d", "#0a9396", "#023e8a",
"#5a189a", "#f26a8d",
"black")) +
scale_x_continuous(trans="log10", limits=c(0.00000008, 1)) +
labs(title = "P-values",
subtitle = "with Bonferroni-corrected alpha=0.05",
x="log10(p-value)", y="Disease Site",
col="Comparison") +
theme(legend.position="none",
axis.text=element_text(size=14),
axis.text.x = element_text(angle=30, hjust=1, vjust=1))) +
(ggplot(method_p, aes(x=p.adj,  y=subtype, col=comparison)) +
geom_label(data=method_p, aes(y = subtype, x = 0.00001, #add n
label = n_cell_line), inherit.aes=F,
label.padding = unit(0.15, "lines"), label.size = 0.4, size = 4) +
geom_vline(xintercept = 0.05, color="black") +
geom_point(alpha=0.7, size=3) +
scale_color_manual(values=c("#9b2226", "#e85d04", "#faa307", "#fcca46",
"#4f772d", "#0a9396", "#023e8a",
"#5a189a", "#f26a8d",
"black")) +
scale_x_continuous(trans="log10") +
labs(title = "FDR-Adjusted P-values",
subtitle = "with alpha = 0.05",
x="log10(Adjusted p-value)", y="Disease Site",
col="Comparison")+
theme(axis.text=element_text(size=14),
axis.text.x = element_text(angle=30, hjust=1, vjust=1)))
(ggplot(method_p, aes(x=p, y=subtype, col=comparison)) +
geom_text(aes(x=bonf.alpha, y=subtype), label="|", color="black",
inherit.aes=F, alpha=0.5) +
geom_label(data=method_p, aes(y = subtype, x = 0.00000008, #add n
label = n_cell_line), inherit.aes=F,
label.padding = unit(0.15, "lines"), label.size = 0.4, size = 4) +
geom_point(alpha=0.7, size=3) +
scale_color_manual(values=c("#9b2226", "#e85d04", "#faa307", "#fcca46",
"#4f772d", "#0a9396", "#023e8a",
"#5a189a", "#f26a8d",
"black")) +
scale_x_continuous(trans="log10", limits=c(0.00000008, 1)) +
labs(title = "P-values",
subtitle = "with Bonferroni-corrected alpha=0.05",
x="log10(p-value)", y="Disease Site",
col="Comparison") +
theme(legend.position="none",
axis.text=element_text(size=14),
axis.text.x = element_text(angle=30, hjust=1, vjust=1))) +
(ggplot(method_p, aes(x=p.adj,  y=subtype, col=comparison)) +
geom_label(data=method_p, aes(y = subtype, x = 0.00001, #add n
label = n_cell_line), inherit.aes=F,
label.padding = unit(0.15, "lines"), label.size = 0.4, size = 4) +
geom_vline(xintercept = 0.05, color="black") +
geom_point(alpha=0.7, size=3) +
scale_color_manual(values=c("#9b2226", "#e85d04", "#faa307", "#fcca46",
"#4f772d", "#0a9396", "#023e8a",
"#5a189a", "#f26a8d",
"black")) +
scale_x_continuous(trans="log10") +
labs(title = "FDR-Adjusted P-values",
subtitle = "with alpha = 0.05",
x="log10(Adjusted p-value)", y="Disease Site",
col="Comparison")+
theme(axis.text=element_text(size=14),
axis.text.x = element_text(angle=30, hjust=1, vjust=1)))
ggsave(here("Plots", "Method Comparison", "wilcoxon_p.png"),
width=9, height=6)
(ggplot(method_p, aes(x=p, y=subtype, col=comparison)) +
geom_text(aes(x=bonf.alpha, y=subtype), label="|", color="black",
inherit.aes=F, alpha=0.5) +
geom_label(data=method_p, aes(y = subtype, x = 0.00000008, #add n
label = n_cell_line), inherit.aes=F,
label.padding = unit(0.15, "lines"), label.size = 0.4, size = 4) +
geom_point(alpha=0.7, size=2.5) +
scale_color_manual(values=c("#9b2226", "#e85d04", "#faa307", "#fcca46",
"#4f772d", "#0a9396", "#023e8a",
"#5a189a", "#f26a8d",
"black")) +
scale_x_continuous(trans="log10", limits=c(0.00000008, 1)) +
labs(title = "P-values",
subtitle = "with Bonferroni-corrected alpha=0.05",
x="log10(p-value)", y="Disease Site",
col="Comparison") +
theme(legend.position="none",
axis.text=element_text(size=14),
axis.text.x = element_text(angle=30, hjust=1, vjust=1))) +
(ggplot(method_p, aes(x=p.adj,  y=subtype, col=comparison)) +
geom_label(data=method_p, aes(y = subtype, x = 0.00001, #add n
label = n_cell_line), inherit.aes=F,
label.padding = unit(0.15, "lines"), label.size = 0.4, size = 4) +
geom_vline(xintercept = 0.05, color="black") +
geom_point(alpha=0.7, size=2.5) +
scale_color_manual(values=c("#9b2226", "#e85d04", "#faa307", "#fcca46",
"#4f772d", "#0a9396", "#023e8a",
"#5a189a", "#f26a8d",
"black")) +
scale_x_continuous(trans="log10") +
labs(title = "FDR-Adjusted P-values",
subtitle = "with alpha = 0.05",
x="log10(Adjusted p-value)", y="Disease Site",
col="Comparison")+
theme(axis.text=element_text(size=14),
axis.text.x = element_text(angle=30, hjust=1, vjust=1)))
ggsave(here("Plots", "Method Comparison", "wilcoxon_p.png"),
width=9, height=6)
ggsave(here("Plots", "Method Comparison", "wilcoxon_p.png"),
width=9, height=7)
library(tidyverse)
View(method_p)
View(method_p %>% filter(comparison=="updownSigs.v.upSigs"))
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(limma)
library(oncoPredict)
library(patchwork)
library(tidyverse)
set.seed(323)
sig_drugs = c("Cisplatin", "Cytarabine", "5-Fluorouracil", "Gemcitabine", "Irinotecan",
"Luminespib", "Paclitaxel", "Topotecan", "Vinblastine", "Vorinostat")
cell_lines = readRDS(here("Data", "cleaned_cell_line_meta.rds"))
subtype_key = readRDS(here("Data", "subtype_key.rds"))
exprs_norm = readRDS(here("Data", "normalized_exprs.rds"))
fit_results = readRDS(here("Results",
paste0(length(sig_drugs), "sig_nlme_fitted_data.rds"))) %>%
mutate(drug = case_when(drug_abbrev=="cis" ~ "Cisplatin",
drug_abbrev=="cyta" ~ "Cytarabine",
drug_abbrev=="fu" ~ "5-Fluorouracil",
drug_abbrev=="gem" ~ "Gemcitabine",
drug_abbrev=="irino" ~ "Irinotecan",
drug_abbrev=="lum" ~ "Luminespib",
drug_abbrev=="pac" ~ "Paclitaxel",
drug_abbrev=="topo" ~ "Topotecan",
drug_abbrev=="vinb" ~ "Vinblastine",
drug_abbrev=="vor" ~ "Vorinostat"))
acc_scores = readRDS(here("Results", paste0(length(sig_drugs),"sig_score_table.rds")))
scored_ranks_full = readRDS(here("Results", paste0(length(sig_drugs),"sig_accuracy_scores_cleaned.rds")))
#create a new df with one row per subtype, and columns = subtype, proportion_correct
subtype = unique(scored_ranks_full$subtype)
subtype_scores = data.frame(subtype=subtype, accuracy=0, n = 0)
for (i in 1:length(subtype)){
#Subset data per subtype
subset = scored_ranks_full[which(scored_ranks_full$subtype == subtype[i]),]
#Store subtype name
subtype_scores$subtype[i] = subtype[i]
#calc and store % of cell line survivals correctly predicted
subtype_scores$accuracy[i] = round((sum(subset$accuracy)/nrow(subset)), digits=3)
#Indicate number of cell lines in subtype (n)
subtype_scores$n[i] = nrow(subset)
}
#order the rows by highest to lowest correct
subtype_scores = subtype_scores[order(subtype_scores$accuracy),]
#To maintain this order when we plot later, factorize the column
subtype_scores$subtype <- factor(subtype_scores$subtype,
ordered = TRUE,
levels = subtype_scores$subtype)
#remove unclassified cell lines
scored_ranks_full = scored_ranks_full %>% filter(subtype != "UNCLASSIFIED")
#Set order to = subtype_scores
cancer_order = (as.character(subtype_scores$subtype))
scored_ranks_full$subtype <- factor(scored_ranks_full$subtype,
ordered = TRUE,
levels = c(cancer_order))
scored_ranks_full = scored_ranks_full[order(scored_ranks_full$subtype),]
#remove unclassified from subtype score averages
subtype_scores$subtype <- factor(subtype_scores$subtype,
ordered = TRUE,
levels = c(cancer_order))
subtype_scores = subtype_scores[order(subtype_scores$subtype),]
rm(subset, cancer_order)
ud_scored_ranks_full = readRDS(here("Results",
paste0(length(sig_drugs),
"sig_updown_accuracy_scores_cleaned.rds")))
#create a new df with one row per subtype, and columns = subtype, proportion_correct
ud_subtype = unique(ud_scored_ranks_full$subtype)
ud_subtype_scores = data.frame(subtype=ud_subtype, accuracy=0, n = 0)
for (i in 1:length(ud_subtype)){
#Subset data per subtype
subset = ud_scored_ranks_full[which(ud_scored_ranks_full$subtype == subtype[i]),]
#Store subtype name
ud_subtype_scores$subtype[i] = subtype[i]
#calc and store % of cell line survivals correctly predicted
ud_subtype_scores$accuracy[i] = round((sum(subset$accuracy)/nrow(subset)), digits=3)
#Indicate number of cell lines in subtype (n)
ud_subtype_scores$n[i] = nrow(subset)
}
#order the rows by highest to lowest correct
ud_subtype_scores = ud_subtype_scores[order(ud_subtype_scores$accuracy),]
#To maintain this order when we plot later, factorize the column
ud_subtype_scores$subtype <- factor(ud_subtype_scores$subtype,
ordered = TRUE,
levels = ud_subtype_scores$subtype)
#remove unclassified cell lines
ud_scored_ranks_full = ud_scored_ranks_full %>% filter(subtype != "UNCLASSIFIED")
#Set order to = subtype_scores
cancer_order = (as.character(ud_subtype_scores$subtype))
ud_scored_ranks_full$subtype <- factor(ud_scored_ranks_full$subtype,
ordered = TRUE,
levels = c(cancer_order))
ud_scored_ranks_full = ud_scored_ranks_full[order(ud_scored_ranks_full$subtype),]
#remove unclassified from subtype score averages
ud_subtype_scores$subtype <- factor(ud_subtype_scores$subtype,
ordered = TRUE,
levels = c(cancer_order))
ud_subtype_scores = ud_subtype_scores[order(ud_subtype_scores$subtype),]
rm(subset, cancer_order)
plot_ud_cg = full_join(ud_scored_ranks_full %>%
mutate(updownSigs=accuracy)%>%
select(cell_line,updownSigs, subtype),
scored_ranks_full %>%
mutate(Chemogram=accuracy) %>%
select(cell_line,Chemogram, subtype),
by="cell_line") %>% select(-subtype.y)
plot_ud_cg = pivot_longer(plot_ud_cg,
cols=c("updownSigs", "Chemogram"),
names_to = "Method",
values_to="Accuracy")
pd <- position_dodge(width = 0.7)
simple_scored_ranks = readRDS(here("Data", "Method Comparison Data",
"simple_scored_ranks.rds"))
simple_scored_ranks = na.omit(simple_scored_ranks) #968 to 942 rows
ss_subtype = unique(simple_scored_ranks$subtype)
ss_subtype_scores = data.frame(subtype=ss_subtype, accuracy=0, n = 0)
for (i in 1:length(ss_subtype)){
#Subset data per subtype
subset = simple_scored_ranks[which(simple_scored_ranks$subtype == ss_subtype[i]),]
#Store subtype name
ss_subtype_scores$subtype[i] = ss_subtype[i]
#calc and store % of cell line survivals correctly predicted
ss_subtype_scores$accuracy[i] = round((sum(subset$accuracy)/nrow(subset)), digits=3)
#Indicate number of cell lines in subtype (n)
ss_subtype_scores$n[i] = nrow(subset)
}
#order the rows by highest to lowest correct
ss_subtype_scores = ss_subtype_scores[order(ss_subtype_scores$accuracy),]
#To maintain this order when we plot later, factorize the column
ss_subtype_scores$subtype <- factor(ss_subtype_scores$subtype,
ordered = TRUE,
levels = ss_subtype_scores$subtype)
cancer_order = (as.character(ss_subtype_scores$subtype))[-c(which(as.character(ss_subtype_scores$subtype)=="UNCLASSIFIED"))]
simple_scored_ranks = simple_scored_ranks %>% filter(subtype != "UNCLASSIFIED")
simple_scored_ranks$subtype <- factor(simple_scored_ranks$subtype,
ordered = TRUE,
levels = c(cancer_order))
simple_scored_ranks = simple_scored_ranks[order(simple_scored_ranks$subtype),]
ss_subtype_scores = ss_subtype_scores %>% filter(subtype != "UNCLASSIFIED")
plot_ss_cg = full_join(simple_scored_ranks %>%
mutate(SimpleSigs=accuracy)%>%
select(cell_line,SimpleSigs, subtype),
scored_ranks_full %>%
mutate(Chemogram=accuracy) %>%
select(cell_line,Chemogram, subtype),
by="cell_line") %>% select(-subtype.y)
plot_ss_cg = pivot_longer(plot_ss_cg,
cols=c("SimpleSigs", "Chemogram"),
names_to = "Method",
values_to="Accuracy")
op_acc = readRDS(here("Results", "oncopredict_rank_acc_scores.rds"))
op_subtype = unique(op_acc$subtype)
op_subtype_scores = data.frame(subtype=op_subtype, accuracy=0, n = 0)
for (i in 1:length(op_subtype)){
#Subset data per subtype
subset = op_acc[which(op_acc$subtype == op_subtype[i]),]
#Store subtype name
op_subtype_scores$subtype[i] = op_subtype[i]
#calc and store % of cell line survivals correctly predicted
op_subtype_scores$accuracy[i] = round((sum(subset$acc_score)/nrow(subset)), digits=3)
#Indicate number of cell lines in subtype (n)
op_subtype_scores$n[i] = nrow(subset)
}
#order the rows by highest to lowest correct
op_subtype_scores = op_subtype_scores[order(op_subtype_scores$accuracy),]
#To maintain this order when we plot later, factorize the column
op_subtype_scores$subtype <- factor(op_subtype_scores$subtype,
ordered = TRUE,
levels = op_subtype_scores$subtype)
cancer_order = (as.character(op_subtype_scores$subtype))[-c(which(as.character(op_subtype_scores$subtype)=="UNCLASSIFIED"))]
op_acc = op_acc %>% filter(subtype != "UNCLASSIFIED")
op_acc$subtype <- factor(op_acc$subtype,
ordered = TRUE,
levels = c(cancer_order))
op_acc = op_acc[order(op_acc$subtype),]
op_subtype_scores = op_subtype_scores %>% filter(subtype != "UNCLASSIFIED")
plot_op_cg = full_join(op_acc %>%
mutate(oncoPredict=acc_score)%>%
select(cell_line,oncoPredict, subtype),
scored_ranks_full %>%
mutate(Chemogram=accuracy) %>%
select(cell_line,Chemogram, subtype),
by="cell_line") %>% select(-subtype.y)
plot_op_cg = pivot_longer(plot_op_cg,
cols=c("oncoPredict", "Chemogram"),
names_to = "Method",
values_to="Accuracy")
plot3 = rbind(plot_ss_cg, plot_op_cg %>% filter(Method=="oncoPredict"))
plot3 = plot3 %>%
mutate(subtype.x = factor(subtype.x, ordered=TRUE,
levels=na.omit(cancer_order)))
cancer_order = subtype_scores$subtype
plot3 = plot3 %>%
mutate(subtype.x = factor(subtype.x, ordered=TRUE,
levels=na.omit(cancer_order)))
nullsigs = readRDS(here("Results", paste0("null_", 1000, "_bootstrap_",
10, "sig_indiv_scores.rds")))%>%
filter(subtype != "UNCLASSIFIED")
nullsigs = nullsigs %>%
mutate(subtype.x = subtype,
Accuracy = as.numeric(n_accuracy),
Method = "nullsigs") %>%
select(cell_line, subtype.x, Method, Accuracy)
plot5 = readRDS(here("Results", "all_method_comparisons.rds"))
plot5 = na.omit(readRDS(here("Results", "all_method_comparisons.rds")))
# cg = na.omit(plot3)%>% filter(Method=="Chemogram") %>%select(Accuracy)
# op = na.omit(plot3)%>% filter(Method=="oncoPredict") %>%select(Accuracy)
# ss = na.omit(plot3)%>% filter(Method=="simpleSigs") %>%select(Accuracy)
#
# wilcox.test(x=as.vector(cg)$Accuracy,
#             y=as.vector(op)$Accuracy,
#                     paired=FALSE, alternative="two.sided")
ggplot(na.omit(plot5), aes(x=Method, y=Accuracy, fill=Method, col=Method)) +
geom_violin(width=0.5, alpha=0.6) +
geom_boxplot(width=0.2, alpha = 0.6, position=pd) +
scale_fill_manual(values=c("#a8dadc","#ffb4a2",  "#c8b6ff", "#9b2226", "#edafb8")) +
scale_color_manual(values=c("#03045e","#e07a5f", "#6d597a","#6a040f", "#c9184a")) +
# scale_fill_manual(values=c("#edafb8","#9b2226",  "#c8b6ff", "#ffb4a2", "#a8dadc")) +
# scale_color_manual(values=c("#c9184a","#6a040f", "#6d597a","#e07a5f", "#03045e")) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1)) +
labs(title=paste0("Predictive Accuracy Various Methods"),
subtitle = paste0(nrow(scored_ranks_full)," Cell Lines against 10 drugs"),
y = "Predictive Accuracy", x = "Disease Site") +
theme_bw(base_size = 15) + #theme and sizing
theme(axis.text.y = element_text(size = 20),
axis.text.x = element_text(size = 18, angle=30, hjust=1, vjust=1),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.text = element_text(size = 10))
method_comp_means = data.frame(Method=character(), mean=numeric())
View(plot5)
lapply(plot5%>%group_by(Method),mean())
lapply(plot5%>%group_by(Method),mean(x))
method_comp_means = plot5 %>%
group_by(Method) %>%
summarise_at(vars(Accuracy), list(name = mean))
View(method_comp_means)
method_comp_means = plot5 %>%
group_by(Method) %>%
summarise_at(vars(Accuracy), list(mean = mean))
ggplot(na.omit(plot5), aes(x=Method, y=Accuracy, fill=Method, col=Method)) +
geom_violin(width=0.5, alpha=0.6) +
geom_boxplot(width=0.2, alpha = 0.6, position=pd) +
scale_fill_manual(values=c("#a8dadc","#ffb4a2",  "#c8b6ff", "#9b2226", "#edafb8")) +
scale_color_manual(values=c("#03045e","#e07a5f", "#6d597a","#6a040f", "#c9184a")) +
geom_label(data=na.omit(method_comp_means), aes(x = Method, y = 0, label = mean), #add n
label.padding = unit(0.15, "lines"), label.size = 0.4, size = 8) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1)) +
labs(title=paste0("Predictive Accuracy Various Methods"),
subtitle = paste0(nrow(scored_ranks_full)," Cell Lines against 10 drugs"),
y = "Predictive Accuracy", x = "Disease Site") +
theme_bw(base_size = 15) + #theme and sizing
theme(axis.text.y = element_text(size = 20),
axis.text.x = element_text(size = 18, angle=30, hjust=1, vjust=1),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.text = element_text(size = 10))
method_comp_means = plot5 %>%
group_by(Method) %>%
summarise_at(vars(Accuracy), list(mean = mean)) %>%
mutate(mean = round(mean, 2))
ggplot(na.omit(plot5), aes(x=Method, y=Accuracy, fill=Method, col=Method)) +
geom_violin(width=0.5, alpha=0.6) +
geom_boxplot(width=0.2, alpha = 0.6, position=pd) +
scale_fill_manual(values=c("#a8dadc","#ffb4a2",  "#c8b6ff", "#9b2226", "#edafb8")) +
scale_color_manual(values=c("#03045e","#e07a5f", "#6d597a","#6a040f", "#c9184a")) +
geom_label(data=na.omit(method_comp_means), aes(x = Method, y = 0, label = mean),
inherit.aes=F,
label.padding = unit(0.15, "lines"), label.size = 0.4, size = 5) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1)) +
labs(title=paste0("Predictive Accuracy Various Methods"),
subtitle = paste0(nrow(scored_ranks_full)," Cell Lines against 10 drugs"),
y = "Predictive Accuracy", x = "Disease Site") +
theme_bw(base_size = 15) + #theme and sizing
theme(axis.text.y = element_text(size = 20),
axis.text.x = element_text(size = 18, angle=30, hjust=1, vjust=1),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.text = element_text(size = 10))
ggplot(na.omit(plot5), aes(x=Method, y=Accuracy, fill=Method, col=Method)) +
geom_violin(width=0.5, alpha=0.6) +
geom_boxplot(width=0.2, alpha = 0.6, position=pd) +
scale_fill_manual(values=c("#a8dadc","#ffb4a2",  "#c8b6ff", "#9b2226", "#edafb8")) +
scale_color_manual(values=c("#03045e","#e07a5f", "#6d597a","#6a040f", "#c9184a")) +
geom_label(data=na.omit(method_comp_means), aes(x = Method, y = 0, label = mean),
inherit.aes=F,
label.padding = unit(0.15, "lines"), label.size = 0.4, size = 5) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1)) +
labs(title=paste0("Predictive Accuracy Various Methods"),
subtitle = paste0(nrow(scored_ranks_full)," Cell Lines against 10 drugs"),
y = "Predictive Accuracy", x = "Disease Site") +
theme_bw(base_size = 15) + #theme and sizing
theme(axis.text.y = element_text(size = 20),
axis.text.x = element_text(size = 18, angle=30, hjust=1, vjust=1),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.text = element_text(size = 10))
ggsave(here("Plots","Method Comparison", "chemogram_v_others_nosubtypes.png"),
width = 6, height = 6)
ggplot(na.omit(plot5), aes(x=Method, y=Accuracy, fill=Method, col=Method)) +
geom_violin(width=0.5, alpha=0.6) +
geom_boxplot(width=0.2, alpha = 0.6, position=pd) +
scale_fill_manual(values=c("#a8dadc","#ffb4a2",  "#c8b6ff", "#9b2226", "#edafb8")) +
scale_color_manual(values=c("#03045e","#e07a5f", "#6d597a","#6a040f", "#c9184a")) +
geom_label(data=na.omit(method_comp_means), aes(x = Method, y = -0.1, label = mean),
inherit.aes=F, alpha=0.5
label.padding = unit(0.15, "lines"), label.size = 0.4, size = 5) +
scale_y_continuous(limits = c(-0.1, 1), breaks = c(0, 0.25, 0.5, 0.75, 1)) +
labs(title=paste0("Predictive Accuracy Various Methods"),
subtitle = paste0(nrow(scored_ranks_full)," Cell Lines against 10 drugs"),
y = "Predictive Accuracy", x = "Disease Site") +
theme_bw(base_size = 15) + #theme and sizing
theme(axis.text.y = element_text(size = 20),
axis.text.x = element_text(size = 18, angle=30, hjust=1, vjust=1),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.text = element_text(size = 10))
ggplot(na.omit(plot5), aes(x=Method, y=Accuracy, fill=Method, col=Method)) +
geom_violin(width=0.5, alpha=0.6) +
geom_boxplot(width=0.2, alpha = 0.6, position=pd) +
scale_fill_manual(values=c("#a8dadc","#ffb4a2",  "#c8b6ff", "#9b2226", "#edafb8")) +
scale_color_manual(values=c("#03045e","#e07a5f", "#6d597a","#6a040f", "#c9184a")) +
geom_label(data=na.omit(method_comp_means), aes(x = Method, y = -0.1, label = mean),
inherit.aes=F, alpha=0.5,
label.padding = unit(0.15, "lines"), label.size = 0.4, size = 5) +
scale_y_continuous(limits = c(-0.1, 1), breaks = c(0, 0.25, 0.5, 0.75, 1)) +
labs(title=paste0("Predictive Accuracy Various Methods"),
subtitle = paste0(nrow(scored_ranks_full)," Cell Lines against 10 drugs"),
y = "Predictive Accuracy", x = "Disease Site") +
theme_bw(base_size = 15) + #theme and sizing
theme(axis.text.y = element_text(size = 20),
axis.text.x = element_text(size = 18, angle=30, hjust=1, vjust=1),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.text = element_text(size = 10))
ggplot(na.omit(plot5), aes(x=Method, y=Accuracy, fill=Method, col=Method)) +
geom_violin(width=0.5, alpha=0.6) +
geom_boxplot(width=0.2, alpha = 0.6, position=pd) +
scale_fill_manual(values=c("#a8dadc","#ffb4a2",  "#c8b6ff", "#9b2226", "#edafb8")) +
scale_color_manual(values=c("#03045e","#e07a5f", "#6d597a","#6a040f", "#c9184a")) +
geom_label(data=na.omit(method_comp_means), aes(x = Method, y = -0.1, label = mean),
inherit.aes=F, alpha=0.5,
label.padding = unit(0.15, "lines"), label.size = 0.4, size = 5) +
scale_y_continuous(limits = c(-0.1, 1), breaks = c(0, 0.25, 0.5, 0.75, 1)) +
labs(title=paste0("Predictive Accuracy Various Methods"),
subtitle = paste0(nrow(scored_ranks_full)," Cell Lines against 10 drugs"),
y = "Predictive Accuracy", x = "Disease Site") +
theme_bw(base_size = 15) + #theme and sizing
theme(axis.text.y = element_text(size = 20),
axis.text.x = element_text(size = 18, angle=30, hjust=1, vjust=1),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.text = element_text(size = 10))
ggsave(here("Plots","Method Comparison", "chemogram_v_others_nosubtypes.png"),
width = 6, height = 6)
ggplot(na.omit(plot5), aes(x=Method, y=Accuracy, fill=Method, col=Method)) +
geom_violin(width=0.5, alpha=0.6) +
geom_boxplot(width=0.2, alpha = 0.6, position=pd) +
scale_fill_manual(values=c("#a8dadc","#ffb4a2",  "#c8b6ff", "#9b2226", "#edafb8")) +
scale_color_manual(values=c("#03045e","#e07a5f", "#6d597a","#6a040f", "#c9184a")) +
geom_label(data=na.omit(method_comp_means), aes(x = Method, y = -0.05, label = mean),
inherit.aes=F, alpha=0.5,
label.padding = unit(0.15, "lines"), label.size = 0.4, size = 5) +
scale_y_continuous(limits = c(-0.05, 1), breaks = c(0, 0.25, 0.5, 0.75, 1)) +
labs(title=paste0("Predictive Accuracy Various Methods"),
subtitle = paste0(nrow(scored_ranks_full)," Cell Lines against 10 drugs"),
y = "Predictive Accuracy", x = "Disease Site") +
theme_bw(base_size = 15) + #theme and sizing
theme(axis.text.y = element_text(size = 20),
axis.text.x = element_text(size = 18, angle=30, hjust=1, vjust=1),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.text = element_text(size = 10))
ggsave(here("Plots","Method Comparison", "chemogram_v_others_nosubtypes.png"),
width = 6, height = 6)
