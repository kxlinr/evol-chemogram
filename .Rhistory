fit_nlme = function(data, drug, drug_abbrev){
#filter to only include the data for one drug
drug_id = drug_ids$DRUG_ID[which(drug_ids$DRUG_NAME==drug)]
data_filt = data %>%
filter(DRUG_ID_lib==drug_id)
#fit the model (https://rdrr.io/github/CancerRxGene/gdscIC50/src/R/nlme_fit_stats.R)
model = fitModelNlmeData(data_filt, isLargeData = F)
stats = calcNlmeStats(model, data_filt) %>% #this returns ln(IC50) & AUC
mutate(cell_line=as.character(CL),
LN_IC50 = IC50,
IC50 = exp(IC50))
stats = left_join(stats, subtype_key, by="cell_line") #add subtype labels per cl
#find median ic50s
subtypes = unique(subtype_key$subtype)
subtype_doses = data.frame(matrix(ncol=5, nrow=length(subtypes)))
for(i in 1:length(subtypes)){
temp = (stats %>% #isolate all CLs and IC50s for one subtype
filter(subtype==subtypes[i]) %>%
select(IC50, cell_line))
subtype_doses$std_dose[i] = median(temp$IC50) #calc the standard dose we will use
subtype_doses$subtype[i] = subtypes[i] #label subtype
subtype_doses$sd[i] = sd(temp$IC50) #record the std dev of the ic50s
subtype_doses$range_dif[i] = (range(temp$IC50)[2]) - (range(temp$IC50)[1]) #record range of ic50s
subtype_doses$n[i] = length(unique(temp$cell_line)) #how many cell lines
rm(temp)
}
subtype_doses = subtype_doses[,-c(1:5)] #rm the empty cols
stats = left_join(stats, subtype_doses, by="subtype") #add the std doses to stats
stats = unique(stats) #rm all the duplicates
stats = stats %>%
mutate(CL = cell_line, #change this name back
dose = std_dose) #rename this to x
#measure obs surv @ std dose per CL
#define functions to let us predict surv at any dose, copied from source code
logist3 <- stats::selfStart( ~ 1/(1 + exp(-(x - xmid)/scal)),
initial = function(mCall, LHS, data){
xy <- stats::sortedXyData(mCall[["x"]], LHS, data)
if(nrow(xy) < 3) {
stop("Too few distinct input values to fit a logistic")
}
xmid <- stats::NLSstClosestX(xy, 0.5 )
scal <- stats::NLSstClosestX(xy, 0.75 ) - xmid
value <- c(xmid, scal)
names(value) <- mCall[c("xmid", "scal")]
value
},
parameters = c("xmid", "scal"))
getXfromConc <- function(xc, maxc) {
x <- (log(xc / maxc)/log(2))+ 9
return(x)
}
l3_model2 <- function(lx, maxc, xmid, scal){
x <- getXfromConc(lx, maxc)
#     yhat <- 1/(1 + exp(1) ^ ((x - xmid) / scal))
yhat <- 1 - logist3(x, xmid, scal)
return(yhat)
}
#calculate surv at standard doses
stats = stats %>%
mutate(surv = l3_model2(lx=dose,
xmid=xmid,
scal=scal,
maxc=maxc))
#clean up duplicates/multiple measurements by taking mean
all_cl = unique(stats$cell_line)
for(i in 1:length(all_cl)){
if(nrow(stats %>% filter(cell_line == all_cl[i])) > 1){
stats$surv[which(stats$cell_line==all_cl[i])] = c(mean(stats$surv[which(stats$cell_line==all_cl[i])]),
mean(stats$surv[which(stats$cell_line==all_cl[i])]))
}
}
#plot auc dist
ggplot(stats, aes(x=auc)) +
geom_histogram(bins=32) +
labs(title = paste0("AUC Distribution for ", drug)) +
theme(axis.text= element_text(size=15),
axis.title= element_text(size=15),
title=element_text(size=15))
ggsave(here("Plots", "Data Prep",
paste0(drug_abbrev, "_auc_dist.png")),
width=7, height=7)
#plot ic50 dist + standard doses
ggplot(stats, aes(x=IC50)) +
geom_histogram(bins=32) +
# geom_vline(xintercept=subtype_doses$std_dose[1:nrow(subtype_doses)]) +
geom_vline(xintercept=stats$dose, alpha=0.7) +
# scale_x_continuous(trans="log10") +
labs(title = paste0("IC50 Distribution for ", drug),
x="ln(IC50)") +
theme(axis.text= element_text(size=15),
axis.title= element_text(size=15),
title=element_text(size=15))
ggsave(here("Plots", "Data Prep",
paste0(drug_abbrev, "_ic50_dist.png")),
width=7, height=7)
stats$drug_abbrev = drug_abbrev #add in the drug abbreviation for the whole df
stats = stats %>% #clean up the data to send back
select(subtype, cell_line, drug_abbrev, surv)
stats = unique(stats)
return(stats)
}
nlme_fits = list()
#each drug only takes 10-20 seconds
for(i in 1:length(sigs)){
print(paste(sig_drugs[i], " -- ", Sys.time()))
nlme_fits[[i]] = fit_nlme(data=nlme_filtered,
drug=sig_drugs[i],
drug_abbrev=names(sigs)[i])
names(nlme_fits)[i] = names(sigs)[i]
}
saveRDS(fit_results,
here("Results",
paste0(length(sigs), "sig_nlme_fitted_data.rds")))
cl_order = subtype_key[order(subtype_key$subtype), "cell_line"] #order both heatmaps by alph. subtype
plot_surv_ht = pivot_wider(fit_results, values_from="surv",
names_from="drug_abbrev")
plot_surv_ht = na.omit(left_join(cl_order,plot_surv_ht,by="cell_line"))
rownames(plot_surv_ht) = plot_surv_ht$cell_line
plot_surv_ht = plot_surv_ht %>%
select(-subtype, -cell_line)
pal = colorRampPalette(c("#023e8a","#0096c7", "#48cae4", "#edede9", "#f77f00", "#d62828", "#6f1d1b"))
pheatmap::pheatmap(na.omit(plot_surv_ht)%>%
select(order(colnames(plot_surv_ht))), #data to use
cluster_cols=FALSE, cluster_rows=FALSE, #specify if rows/cols should be clustered
angle_col=0, show_rownames = FALSE,
color = pal(100),
main="Survival at Standard Dose Across All Cell Lines", #title
legend_labels = "Survival\n", #Where to save the file
filename=here("Plots", "Data Prep",
paste0(length(sig_drugs), "sig_surv_CL.png"))) #Where to save the file
rm(plot_surv_ht)
ggplot(fit_results, aes(x=surv, col = drug_abbrev,)) +
geom_density(size=1) +
scale_color_manual(values = c("#9b2226","#f94149","#f3722c", "#f9c74f", "#90be6d",
"#43aa8b", "#277da1",  "#4361ee", "#7209b7", "#f72585")) +
labs(x="Survival at Standard Dose",
y="Frequency",
color="Drug",
title="Distribution of Survival at Standard Doses",
subtitle = paste0(length(unique(fit_results$cell_line)), " Cell Lines"))
fit_results = do.call(rbind, nlme_fits) #turn the list into a data frame
rm(nlme_fits) #rm the list
saveRDS(fit_results,
here("Results",
paste0(length(sigs), "sig_nlme_fitted_data.rds")))
cl_order = subtype_key[order(subtype_key$subtype), "cell_line"] #order both heatmaps by alph. subtype
plot_surv_ht = pivot_wider(fit_results, values_from="surv",
names_from="drug_abbrev")
plot_surv_ht = na.omit(left_join(cl_order,plot_surv_ht,by="cell_line"))
rownames(plot_surv_ht) = plot_surv_ht$cell_line
plot_surv_ht = plot_surv_ht %>%
select(-subtype, -cell_line)
pal = colorRampPalette(c("#023e8a","#0096c7", "#48cae4", "#edede9", "#f77f00", "#d62828", "#6f1d1b"))
pheatmap::pheatmap(na.omit(plot_surv_ht)%>%
select(order(colnames(plot_surv_ht))), #data to use
cluster_cols=FALSE, cluster_rows=FALSE, #specify if rows/cols should be clustered
angle_col=0, show_rownames = FALSE,
color = pal(100),
main="Survival at Standard Dose Across All Cell Lines", #title
legend_labels = "Survival\n", #Where to save the file
filename=here("Plots", "Data Prep",
paste0(length(sig_drugs), "sig_surv_CL.png"))) #Where to save the file
rm(plot_surv_ht)
ggplot(fit_results, aes(x=surv, col = drug_abbrev,)) +
geom_density(size=1) +
scale_color_manual(values = c("#9b2226","#f94149","#f3722c", "#f9c74f", "#90be6d",
"#43aa8b", "#277da1",  "#4361ee", "#7209b7", "#f72585")) +
labs(x="Survival at Standard Dose",
y="Frequency",
color="Drug",
title="Distribution of Survival at Standard Doses",
subtitle = paste0(length(unique(fit_results$cell_line)), " Cell Lines"))
ggsave(here("Plots" ,"Data Prep",
paste0(length(sigs), "drug_survival_dist.png")),
width=8, height=6)
#plot ic50 dist + standard doses
ggplot(stats, aes(x=IC50)) +
geom_histogram(bins=32) +
# geom_vline(xintercept=subtype_doses$std_dose[1:nrow(subtype_doses)]) +
geom_vline(xintercept=stats$dose, alpha=0.7) +
scale_x_continuous(trans="log") +
labs(title = paste0("IC50 Distribution for ", drug),
x="ln(IC50)") +
theme(axis.text= element_text(size=15),
axis.title= element_text(size=15),
title=element_text(size=15))
#plot ic50 dist + standard doses
ggplot(stats, aes(x=LN_IC50)) +
geom_histogram(bins=32) +
# geom_vline(xintercept=subtype_doses$std_dose[1:nrow(subtype_doses)]) +
# geom_vline(xintercept=stats$dose, alpha=0.7) +
scale_x_continuous(trans="log") +
labs(title = paste0("IC50 Distribution for ", drug),
x="ln(IC50)") +
theme(axis.text= element_text(size=15),
axis.title= element_text(size=15),
title=element_text(size=15))
#plot ic50 dist + standard doses
ggplot(stats, aes(x=LN_IC50)) +
geom_histogram(bins=32) +
# geom_vline(xintercept=subtype_doses$std_dose[1:nrow(subtype_doses)]) +
# geom_vline(xintercept=stats$dose, alpha=0.7) +
# scale_x_continuous(trans="log") +
labs(title = paste0("IC50 Distribution for ", drug),
x="ln(IC50)") +
theme(axis.text= element_text(size=15),
axis.title= element_text(size=15),
title=element_text(size=15))
#plot ic50 dist + standard doses
ggplot(stats, aes(x=LN_IC50)) +
geom_histogram(bins=32) +
# geom_vline(xintercept=subtype_doses$std_dose[1:nrow(subtype_doses)]) +
geom_vline(xintercept=stats$dose, alpha=0.7) +
# scale_x_continuous(trans="log") +
labs(title = paste0("IC50 Distribution for ", drug),
x="ln(IC50)") +
theme(axis.text= element_text(size=15),
axis.title= element_text(size=15),
title=element_text(size=15))
#plot ic50 dist + standard doses
ggplot(stats, aes(x=LN_IC50)) +
geom_histogram(bins=32) +
# geom_vline(xintercept=subtype_doses$std_dose[1:nrow(subtype_doses)]) +
geom_vline(xintercept=stats$dose, alpha=0.7) +
# scale_x_continuous(trans="log") +
labs(title = paste0("IC50 Distribution for ", drug),
x="ln(IC50)") +
theme(axis.text= element_text(size=15),
axis.title= element_text(size=15),
title=element_text(size=15))
#plot ic50 dist + standard doses
ggplot(stats, aes(x=IC50)) +
geom_histogram(bins=32) +
# geom_vline(xintercept=subtype_doses$std_dose[1:nrow(subtype_doses)]) +
geom_vline(xintercept=stats$dose, alpha=0.7) +
scale_x_continuous(trans="log") +
labs(title = paste0("IC50 Distribution for ", drug),
x="ln(IC50)") +
theme(axis.text= element_text(size=15),
axis.title= element_text(size=15),
title=element_text(size=15))
#plot ic50 dist + standard doses
ggplot(stats, aes(x=IC50)) +
geom_histogram(bins=32) +
# geom_vline(xintercept=subtype_doses$std_dose[1:nrow(subtype_doses)]) +
geom_vline(xintercept=stats$dose, alpha=0.7) +
# scale_x_continuous(trans="log") +
labs(title = paste0("IC50 Distribution for ", drug),
x="ln(IC50)") +
theme(axis.text= element_text(size=15),
axis.title= element_text(size=15),
title=element_text(size=15))
stats = stats %>%
mutate(CL = cell_line, #change this name back
dose = std_dose) #rename this to x
#plot ic50 dist + standard doses
ggplot(stats, aes(x=IC50)) +
geom_histogram(bins=32) +
# geom_vline(xintercept=subtype_doses$std_dose[1:nrow(subtype_doses)]) +
geom_vline(xintercept=stats$dose, alpha=0.7) +
# scale_x_continuous(trans="log") +
labs(title = paste0("IC50 Distribution for ", drug),
x="ln(IC50)") +
theme(axis.text= element_text(size=15),
axis.title= element_text(size=15),
title=element_text(size=15))
#plot ic50 dist + standard doses
ggplot(stats, aes(x=IC50)) +
geom_histogram(bins=32) +
# geom_vline(xintercept=subtype_doses$std_dose[1:nrow(subtype_doses)]) +
geom_vline(xintercept=stats$dose, alpha=0.7) +
scale_x_continuous(trans="log") +
labs(title = paste0("IC50 Distribution for ", drug),
x="ln(IC50)") +
theme(axis.text= element_text(size=15),
axis.title= element_text(size=15),
title=element_text(size=15))
i=6
drug_id = drug_ids$DRUG_ID[which(drug_ids$DRUG_NAME==drug)]
data_filt = data %>%
filter(DRUG_ID_lib==drug_id)
#fit the model (https://rdrr.io/github/CancerRxGene/gdscIC50/src/R/nlme_fit_stats.R)
model = fitModelNlmeData(data_filt, isLargeData = F)
stats = calcNlmeStats(model, data_filt) %>% #this returns ln(IC50) & AUC
mutate(cell_line=as.character(CL),
LN_IC50 = IC50,
IC50 = exp(IC50))
stats = left_join(stats, subtype_key, by="cell_line") #add subtype labels per cl
#find median ic50s
subtypes = unique(subtype_key$subtype)
subtype_doses = data.frame(matrix(ncol=5, nrow=length(subtypes)))
for(i in 1:length(subtypes)){
temp = (stats %>% #isolate all CLs and IC50s for one subtype
filter(subtype==subtypes[i]) %>%
select(IC50, cell_line))
subtype_doses$std_dose[i] = median(temp$IC50) #calc the standard dose we will use
subtype_doses$subtype[i] = subtypes[i] #label subtype
subtype_doses$sd[i] = sd(temp$IC50) #record the std dev of the ic50s
subtype_doses$range_dif[i] = (range(temp$IC50)[2]) - (range(temp$IC50)[1]) #record range of ic50s
subtype_doses$n[i] = length(unique(temp$cell_line)) #how many cell lines
rm(temp)
}
subtype_doses = subtype_doses[,-c(1:5)] #rm the empty cols
stats = left_join(stats, subtype_doses, by="subtype") #add the std doses to stats
stats = unique(stats) #rm all the duplicates
stats = stats %>%
mutate(CL = cell_line, #change this name back
dose = std_dose) #rename this to x
#measure obs surv @ std dose per CL
#define functions to let us predict surv at any dose, copied from source code
logist3 <- stats::selfStart( ~ 1/(1 + exp(-(x - xmid)/scal)),
initial = function(mCall, LHS, data){
xy <- stats::sortedXyData(mCall[["x"]], LHS, data)
if(nrow(xy) < 3) {
stop("Too few distinct input values to fit a logistic")
}
xmid <- stats::NLSstClosestX(xy, 0.5 )
scal <- stats::NLSstClosestX(xy, 0.75 ) - xmid
value <- c(xmid, scal)
names(value) <- mCall[c("xmid", "scal")]
value
},
parameters = c("xmid", "scal"))
getXfromConc <- function(xc, maxc) {
x <- (log(xc / maxc)/log(2))+ 9
return(x)
}
l3_model2 <- function(lx, maxc, xmid, scal){
x <- getXfromConc(lx, maxc)
#     yhat <- 1/(1 + exp(1) ^ ((x - xmid) / scal))
yhat <- 1 - logist3(x, xmid, scal)
return(yhat)
}
#calculate surv at standard doses
stats = stats %>%
mutate(surv = l3_model2(lx=dose,
xmid=xmid,
scal=scal,
maxc=maxc))
#clean up duplicates/multiple measurements by taking mean
all_cl = unique(stats$cell_line)
for(i in 1:length(all_cl)){
if(nrow(stats %>% filter(cell_line == all_cl[i])) > 1){
stats$surv[which(stats$cell_line==all_cl[i])] = c(mean(stats$surv[which(stats$cell_line==all_cl[i])]),
mean(stats$surv[which(stats$cell_line==all_cl[i])]))
}
}
#plot ic50 dist + standard doses
ggplot(stats, aes(x=IC50)) +
geom_histogram(bins=32) +
# geom_vline(xintercept=subtype_doses$std_dose[1:nrow(subtype_doses)]) +
geom_vline(xintercept=stats$dose, alpha=0.7) +
scale_x_continuous(trans="log") +
labs(title = paste0("IC50 Distribution for ", drug),
x="ln(IC50)") +
theme(axis.text= element_text(size=15),
axis.title= element_text(size=15),
title=element_text(size=15))
#plot ic50 dist + standard doses
ggplot(stats, aes(x=IC50)) +
geom_histogram(bins=32) +
# geom_vline(xintercept=subtype_doses$std_dose[1:nrow(subtype_doses)]) +
geom_vline(xintercept=stats$dose, alpha=0.7) +
# scale_x_continuous(trans="log") +
labs(title = paste0("IC50 Distribution for ", drug),
x="ln(IC50)") +
theme(axis.text= element_text(size=15),
axis.title= element_text(size=15),
title=element_text(size=15))
#plot ic50 dist + standard doses
ggplot(stats, aes(x=IC50)) +
geom_histogram(bins=32) +
# geom_vline(xintercept=subtype_doses$std_dose[1:nrow(subtype_doses)]) +
geom_vline(xintercept=stats$dose, alpha=0.7) +
scale_x_continuous(trans="log") +
labs(title = paste0("IC50 Distribution for ", drug),
x="ln(IC50)") +
theme(axis.text= element_text(size=15),
axis.title= element_text(size=15),
title=element_text(size=15))
#plot ic50 dist + standard doses
ggplot(stats, aes(x=IC50)) +
geom_histogram(bins=32) +
# geom_vline(xintercept=subtype_doses$std_dose[1:nrow(subtype_doses)]) +
geom_vline(xintercept=stats$dose, alpha=0.7) +
# scale_x_continuous(trans="log") +
labs(title = paste0("IC50 Distribution for ", drug),
x="ln(IC50)") +
theme(axis.text= element_text(size=15),
axis.title= element_text(size=15),
title=element_text(size=15))
#plot ic50 dist + standard doses
ggplot(stats, aes(x=LN_IC50)) +
geom_histogram(bins=32) +
# geom_vline(xintercept=subtype_doses$std_dose[1:nrow(subtype_doses)]) +
geom_vline(xintercept=log(stats$dose), alpha=0.7) +
# scale_x_continuous(trans="log") +
labs(title = paste0("IC50 Distribution for ", drug),
x="ln(IC50)") +
theme(axis.text= element_text(size=15),
axis.title= element_text(size=15),
title=element_text(size=15))
fit_nlme = function(data, drug, drug_abbrev){
#filter to only include the data for one drug
drug_id = drug_ids$DRUG_ID[which(drug_ids$DRUG_NAME==drug)]
data_filt = data %>%
filter(DRUG_ID_lib==drug_id)
#fit the model (https://rdrr.io/github/CancerRxGene/gdscIC50/src/R/nlme_fit_stats.R)
model = fitModelNlmeData(data_filt, isLargeData = F)
stats = calcNlmeStats(model, data_filt) %>% #this returns ln(IC50) & AUC
mutate(cell_line=as.character(CL),
LN_IC50 = IC50,
IC50 = exp(IC50))
stats = left_join(stats, subtype_key, by="cell_line") #add subtype labels per cl
#find median ic50s
subtypes = unique(subtype_key$subtype)
subtype_doses = data.frame(matrix(ncol=5, nrow=length(subtypes)))
for(i in 1:length(subtypes)){
temp = (stats %>% #isolate all CLs and IC50s for one subtype
filter(subtype==subtypes[i]) %>%
select(IC50, cell_line))
subtype_doses$std_dose[i] = median(temp$IC50) #calc the standard dose we will use
subtype_doses$subtype[i] = subtypes[i] #label subtype
subtype_doses$sd[i] = sd(temp$IC50) #record the std dev of the ic50s
subtype_doses$range_dif[i] = (range(temp$IC50)[2]) - (range(temp$IC50)[1]) #record range of ic50s
subtype_doses$n[i] = length(unique(temp$cell_line)) #how many cell lines
rm(temp)
}
subtype_doses = subtype_doses[,-c(1:5)] #rm the empty cols
stats = left_join(stats, subtype_doses, by="subtype") #add the std doses to stats
stats = unique(stats) #rm all the duplicates
stats = stats %>%
mutate(CL = cell_line, #change this name back
dose = std_dose) #rename this to x
#measure obs surv @ std dose per CL
#define functions to let us predict surv at any dose, copied from source code
logist3 <- stats::selfStart( ~ 1/(1 + exp(-(x - xmid)/scal)),
initial = function(mCall, LHS, data){
xy <- stats::sortedXyData(mCall[["x"]], LHS, data)
if(nrow(xy) < 3) {
stop("Too few distinct input values to fit a logistic")
}
xmid <- stats::NLSstClosestX(xy, 0.5 )
scal <- stats::NLSstClosestX(xy, 0.75 ) - xmid
value <- c(xmid, scal)
names(value) <- mCall[c("xmid", "scal")]
value
},
parameters = c("xmid", "scal"))
getXfromConc <- function(xc, maxc) {
x <- (log(xc / maxc)/log(2))+ 9
return(x)
}
l3_model2 <- function(lx, maxc, xmid, scal){
x <- getXfromConc(lx, maxc)
#     yhat <- 1/(1 + exp(1) ^ ((x - xmid) / scal))
yhat <- 1 - logist3(x, xmid, scal)
return(yhat)
}
#calculate surv at standard doses
stats = stats %>%
mutate(surv = l3_model2(lx=dose,
xmid=xmid,
scal=scal,
maxc=maxc))
#clean up duplicates/multiple measurements by taking mean
all_cl = unique(stats$cell_line)
for(i in 1:length(all_cl)){
if(nrow(stats %>% filter(cell_line == all_cl[i])) > 1){
stats$surv[which(stats$cell_line==all_cl[i])] = c(mean(stats$surv[which(stats$cell_line==all_cl[i])]),
mean(stats$surv[which(stats$cell_line==all_cl[i])]))
}
}
#plot auc dist
ggplot(stats, aes(x=auc)) +
geom_histogram(bins=32) +
labs(title = paste0("AUC Distribution for ", drug)) +
theme(axis.text= element_text(size=15),
axis.title= element_text(size=15),
title=element_text(size=15))
ggsave(here("Plots", "Data Prep",
paste0(drug_abbrev, "_auc_dist.png")),
width=7, height=7)
#plot ic50 dist + standard doses
ggplot(stats, aes(x=LN_IC50)) +
geom_histogram(bins=32) +
# geom_vline(xintercept=subtype_doses$std_dose[1:nrow(subtype_doses)]) +
geom_vline(xintercept=log(stats$dose), alpha=0.7) +
# scale_x_continuous(trans="log") +
labs(title = paste0("IC50 Distribution for ", drug),
x="ln(IC50)") +
theme(axis.text= element_text(size=15),
axis.title= element_text(size=15),
title=element_text(size=15))
ggsave(here("Plots", "Data Prep",
paste0(drug_abbrev, "_ic50_dist.png")),
width=7, height=7)
stats$drug_abbrev = drug_abbrev #add in the drug abbreviation for the whole df
stats = stats %>% #clean up the data to send back
select(subtype, cell_line, drug_abbrev, surv)
stats = unique(stats)
return(stats)
}
nlme_fits = list()
#each drug only takes 10-20 seconds
for(i in 1:length(sigs)){
print(paste(sig_drugs[i], " -- ", Sys.time()))
nlme_fits[[i]] = fit_nlme(data=nlme_filtered,
drug=sig_drugs[i],
drug_abbrev=names(sigs)[i])
names(nlme_fits)[i] = names(sigs)[i]
}
